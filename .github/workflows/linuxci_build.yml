on:
  workflow_dispatch:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build:
    name: deploy standalone build for arch-linux
    runs-on: ubuntu-latest

    steps:
      - name: Setup dev environment
        run: |
          sudo apt update && sudo apt install build-essential \
            git \
            cmake \
            ninja-build \
            ffmpeg libavcodec-dev libavformat-dev libavutil-dev libswscale-dev libevdev-dev libusb-1.0-0-dev libxrandr-dev libxi-dev libpangocairo-1.0-0 qt6-base-private-dev libqt6svg6-dev libbluetooth-dev libasound2-dev libpulse-dev libgl1-mesa-dev libcurl4-openssl-dev
          sudo apt install libudev-dev libsystemd-dev || sudo apt install libeudev-dev #distros without systemd like AntiX must use eudev instead
          
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Build
        run: |
          # dpkg -l | grep qt # check qt is version 6
          mkdir -p build/out

          build_path="./build"
          out_path="./build/out"
          
          git -c submodule."Externals/Qt".update=none \
          -c submodule."Externals/FFmpeg-bin".update=none \
          -c submodule."Externals/libadrenotools".update=none \
          submodule update --init --recursive \
          && git pull --recurse-submodules

          cmake -S . -B "$build_path" \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX="$out_path" \
            -DCMAKE_CXX_FLAGS=-march=native \
            -DCMAKE_C_FLAGS=-march=native \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DENABLE_ANALYTICS=OFF \
            -DENABLE_AUTOUPDATE=OFF \
            -DENABLE_BLUEZ=OFF \
            -DENABLE_TESTS=OFF \
            -DLINUX_LOCAL_DEV=ON \
            -DUSE_DISCORD_PRESENCE=OFF \
            -DUSE_RETRO_ACHIEVEMENTS=OFF \
            -GNinja

          ninja -C "$build_path" && ninja -C "$build_path" install

          cp -r ./Data/Sys/ "$out_path"/Binaries/

          touch "$out_path"/Binaries/portable.txt

  
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dolphin-artifact 
          path: ./build/out/ 
